/**
 * @file infotronic.h
 * @brief Declaraciones para la placa infotronic v2
 * @author Augusto Santini
 * @date 12/2019
 * @version 1.0
 */

#ifndef INFOTRONIC_H_
#define INFOTRONIC_H_

#include <stdint.h>

#define		INFOTRONIC_NO_KEY		0xFF

/**
 * @brief Inicializacion de la placa infotronic v2
 */
void infotronic_init(void);

/**
 * @brief Obtener tecla pulsada
 * @return Tecla pulsada (0 ~ 5 o NO_KEY), una vez leida, se limpia el buffer hasta que se presione la proxima tecla
 */
uint8_t infotronic_get_key(void);

/**
 * @brief Cerrar un rele
 * @param numero_rele Numero de rele a cerrar (0 ~ 3)
 */
void infotronic_relay_close(uint8_t numero_rele);

/**
 * @brief Abrir un rele
 * @param numero_rele Numero de rele a abrir (0 ~ 3)
 */
void infotronic_relay_open(uint8_t numero_rele);

/**
 * @brief Invertir el estado de un rele
 * @param numero_rele Numero de rele a invertir (0 ~ 3)
 */
void infotronic_relay_toggle(uint8_t numero_rele);

/**
 * @brief Apagar display
 * @param display Numero de display a apagar (0 ~ 1)
 */
void infotronic_display_off(uint8_t display);

/**
 * @brief Encender display
 * @param display Numero de display a encender (0 ~ 1)
 */
void infotronic_display_on(uint8_t display);

/**
 * @brief Escribir display
 * @param display Numero de display sobre el cual escribir (0 ~ 1)
 * @param number Numero a escribir en el display (0 ~ 999)
 */
void infotronic_display_write(uint8_t display, uint32_t number);

/**
 * @brief Encender el display point de un digito de un display
 * @param display Numero de display sobre el cual escribir (0 ~ 1)
 * @param digit Digito del display a prender (0 ~ 2)
 */
void infotronic_display_set_dp(uint8_t display, uint8_t digit);

/**
 * @brief Apagar el display point de un digito de un display
 * @param display Numero de display sobre el cual escribir (0 ~ 1)
 * @param digit Digito del display a prender (0 ~ 2)
 */
void infotronic_display_clear_dp(uint8_t display, uint8_t digit);

#endif /* INFOTRONIC_H_ */
